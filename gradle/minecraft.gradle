// Shared Gradle configuration for the Sponge ForgeGradle projects

ext.api = common.project('SpongeAPI')

// Apply shared Gradle configuration in SpongeAPI
apply from: api.file('gradle/sponge.gradle')

// Finish configuring SpongeAPI first
evaluationDependsOn api.path

// ForgeGradle 2 doesn't provide {SRG_DIR} anymore, we still need it frequently so we'll add it on our own for now
minecraftPlugin.replacer.putReplacement('SRG_DIR', "$DIR_MCP_MAPPINGS/srgs")

// Mixins
sourceSets {
    main {
        refMap = "mixins.${implementation.toLowerCase()}.refmap.json" 
    }
}

minecraft {
    mappings = 'stable_18'
    runDir = 'run'
}

// Compile options
compileJava {
    options.compilerArgs += '-Xlint:-processing'
}

// Copy the current srgs to the build dir so the user doesn't have to go hunting for them
task copySrgs(type: Copy, dependsOn: 'genSrgs') {
    from minecraftPlugin.delayedFile('{SRG_DIR}')

    include '**/*.srg'
    into 'build/srgs'
}

// Run copySrgs when setting up the workspace
setupDecompWorkspace.dependsOn copySrgs
setupDevWorkspace.dependsOn copySrgs
compileJava.dependsOn copySrgs

// ForgeGradle 2 fails to apply transformer rules for classes it doesn't know of by default
// We use the access transformer to make the catalogs in the API accessible
deobfMcMCP { failOnAtError = false }
deobfMcSRG { failOnAtError = false }

if (!plugins.hasPlugin('net.minecraftforge.forge')) {
    minecraft {
        atSource sourceSets.main
    }

    afterEvaluate {
        reobfJar.primarySrg = minecraftPlugin.delayedFile('{SRG_DIR}/mcp-srg.srg')
    }
}

// Set manifest entries
jar {
    manifest {
        attributes(
                'Specification-Name': api.name,
                'Specification-Version': api.version,
                'Specification-Vendor': api.url
        )
    }
}

sourceSets {
    java6 {
        compileClasspath += main.compileClasspath + main.output
    }
}

// Java 6 source set for compatibility checking

jar {
    from sourceSets.java6.output
}

compileJava6Java {
    sourceCompatibility = '1.6'
    targetCompatibility = '1.6'
}

// Use checkstyle suppressions from Common
checkstyle {
    configProperties['suppressions'] = common.file('checkstyle-suppressions.xml')
}

license {
    ext.name = 'Sponge'
}
